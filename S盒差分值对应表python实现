
#SBOX = [[[14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7], [0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8], [4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0], [15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13]], [[15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10], [3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5], [0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15], [13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9]], [[10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8], [13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1], [13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7], [1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12]], [[7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15], [13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9], [10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4], [3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14]], [[2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9], [14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6], [4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14], [11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3]], [[12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11], [10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8], [9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6], [4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13]], [[4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1], [13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6], [1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2], [6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12]], [[13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7], [1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2], [7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8], [2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11]]]
#为了方便这里只选择SBOX中的S1盒进行演示

sbox1=[[14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7],
	[0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8],
	[4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0],
	[15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13]]

#存储S1盒output的异或值
sout_table=[0]

for i in range(0,64*16):
	sout_table.append(0)

for Si in range(0,64):
	for Se1 in range(0,64):
		Se2=Se1^Si
		
		#计算Se1经过S1盒的值
		bits1 = bin(Se1).replace('0b','').rjust(6,'0')
		row1 = int(bits1[0])*2+int(bits1[5])
		col1 = int(bits1[1])*8+int(bits1[2])*4+int(bits1[3])*2+int(bits1[4])
		val1 = bin(sbox1[row1][col1])[2:]

		#计算Se2经过S1盒的值
		bits2 = bin(Se2).replace('0b','').rjust(6,'0')
		row2 = int(bits2[0])*2+int(bits2[5])
		col2 = int(bits2[1])*8+int(bits2[2])*4+int(bits2[3])*2+int(bits2[4])
		val2 = bin(sbox1[row2][col2])[2:]
		So=int(val1,2)^int(val2,2)
		
		#将相应表项加1
		sout_table[Si*16+So]=sout_table[Si*16+So]+1

for i in range(0,64):
	s=str(i)+" : "
	for j in range(0,16):
		s=s+str(sout_table[i*16+j])+"  "
	print(s)


#以下为结果	
'''
0 : 64  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  
1 : 0  0  0  6  0  2  4  4  0  10  12  4  10  6  2  4  
2 : 0  0  0  8  0  4  4  4  0  6  8  6  12  6  4  2  
3 : 14  4  2  2  10  6  4  2  6  4  4  0  2  2  2  0  
4 : 0  0  0  6  0  10  10  6  0  4  6  4  2  8  6  2  
5 : 4  8  6  2  2  4  4  2  0  4  4  0  12  2  4  6  
6 : 0  4  2  4  8  2  6  2  8  4  4  2  4  2  0  12  
7 : 2  4  10  4  0  4  8  4  2  4  8  2  2  2  4  4  
8 : 0  0  0  12  0  8  8  4  0  6  2  8  8  2  2  4  
9 : 10  2  4  0  2  4  6  0  2  2  8  0  10  0  2  12  
10 : 0  8  6  2  2  8  6  0  6  4  6  0  4  0  2  10  
11 : 2  4  0  10  2  2  4  0  2  6  2  6  6  4  2  12  
12 : 0  0  0  8  0  6  6  0  0  6  6  4  6  6  14  2  
13 : 6  6  4  8  4  8  2  6  0  6  4  6  0  2  0  2  
14 : 0  4  8  8  6  6  4  0  6  6  4  0  0  4  0  8  
15 : 2  0  2  4  4  6  4  2  4  8  2  2  2  6  8  8  
16 : 0  0  0  0  0  0  2  14  0  6  6  12  4  6  8  6  
17 : 6  8  2  4  6  4  8  6  4  0  6  6  0  4  0  0  
18 : 0  8  4  2  6  6  4  6  6  4  2  6  6  0  4  0  
19 : 2  4  4  6  2  0  4  6  2  0  6  8  4  6  4  6  
20 : 0  8  8  0  10  0  4  2  8  2  2  4  4  8  4  0  
21 : 0  4  6  4  2  2  4  10  6  2  0  10  0  4  6  4  
22 : 0  8  10  8  0  2  2  6  10  2  0  2  0  6  2  6  
23 : 4  4  6  0  10  6  0  2  4  4  4  6  6  6  2  0  
24 : 0  6  6  0  8  4  2  2  2  4  6  8  6  6  2  2  
25 : 2  6  2  4  0  8  4  6  10  4  0  4  2  8  4  0  
26 : 0  6  4  0  4  6  6  6  6  2  2  0  4  4  6  8  
27 : 4  4  2  4  10  6  6  4  6  2  2  4  2  2  4  2  
28 : 0  10  10  6  6  0  0  12  6  4  0  0  2  4  4  0  
29 : 4  2  4  0  8  0  0  2  10  0  2  6  6  6  14  0  
30 : 0  2  6  0  14  2  0  0  6  4  10  8  2  2  6  2  
31 : 2  4  10  6  2  2  2  8  6  8  0  0  0  4  6  4  
32 : 0  0  0  10  0  12  8  2  0  6  4  4  4  2  0  12  
33 : 0  4  2  4  4  8  10  0  4  4  10  0  4  0  2  8  
34 : 10  4  6  2  2  8  2  2  2  2  6  0  4  0  4  10  
35 : 0  4  4  8  0  2  6  0  6  6  2  10  2  4  0  10  
36 : 12  0  0  2  2  2  2  0  14  14  2  0  2  6  2  4  
37 : 6  4  4  12  4  4  4  10  2  2  2  0  4  2  2  2  
38 : 0  0  4  10  10  10  2  4  0  4  6  4  4  4  2  0  
39 : 10  4  2  0  2  4  2  0  4  8  0  4  8  8  4  4  
40 : 12  2  2  8  2  6  12  0  0  2  6  0  4  0  6  2  
41 : 4  2  2  10  0  2  4  0  0  14  10  2  4  6  0  4  
42 : 4  2  4  6  0  2  8  2  2  14  2  6  2  6  2  2  
43 : 12  2  2  2  4  6  6  2  0  2  6  2  6  0  8  4  
44 : 4  2  2  4  0  2  10  4  2  2  4  8  8  4  2  6  
45 : 6  2  6  2  8  4  4  4  2  4  6  0  8  2  0  6  
46 : 6  6  2  2  0  2  4  6  4  0  6  2  12  2  6  4  
47 : 2  2  2  2  2  6  8  8  2  4  4  6  8  2  4  2  
48 : 0  4  6  0  12  6  2  2  8  2  4  4  6  2  2  4  
49 : 4  8  2  10  2  2  2  2  6  0  0  2  2  4  10  8  
50 : 4  2  6  4  4  2  2  4  6  6  4  8  2  2  8  0  
51 : 4  4  6  2  10  8  4  2  4  0  2  2  4  6  2  4  
52 : 0  8  16  6  2  0  0  12  6  0  0  0  0  8  0  6  
53 : 2  2  4  0  8  0  0  0  14  4  6  8  0  2  14  0  
54 : 2  6  2  2  8  0  2  2  4  2  6  8  6  4  10  0  
55 : 2  2  12  4  2  4  4  10  4  4  2  6  0  2  2  4  
56 : 0  6  2  2  2  0  2  2  4  6  4  4  4  6  10  10  
57 : 6  2  2  4  12  6  4  8  4  0  2  4  2  4  4  0  
58 : 6  4  6  4  6  8  0  6  2  2  6  2  2  6  4  0  
59 : 2  6  4  0  0  2  4  6  4  6  8  6  4  4  6  2  
60 : 0  10  4  0  12  0  4  2  6  0  4  12  4  4  2  0  
61 : 0  8  6  2  2  6  0  8  4  4  0  4  0  12  4  4  
62 : 4  8  2  2  2  4  4  14  4  2  0  2  0  8  4  4  
63 : 4  8  4  2  4  0  2  4  4  2  4  8  8  6  2  2
'''
